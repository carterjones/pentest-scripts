package main

import (
	"bytes"
	"io/ioutil"
	"net/http"

	"github.com/elazarl/goproxy"
)

type ResponseHandler struct{}

func (rh *ResponseHandler) Process(
	r *http.Response,
	ctx *goproxy.ProxyCtx,
	settings *Settings) (*http.Response, error) {
	if settings.LogResponses {
		if !settings.HostRex.MatchString(ctx.Req.URL.Host) {
			return r, nil
		}

		// This saves the entire buffer to memory, rather than piping it through concurrent readers.
		data, err := ioutil.ReadAll(ctx.Resp.Body)
		if err != nil {
			return nil, err
		}

		println(string(data))
		ctx.Resp.Body = ioutil.NopCloser(bytes.NewReader(data))
	}

	return r, nil
}
